{"version":3,"sources":["Components/Header.js","Reducer/GlobalTransactionReducer.js","Context/GlobalState.js","Components/Balance.js","Components/IncomeExpense.js","Components/Transaction.js","Components/TransactionList.js","Components/AddTransaction.js","App.js","index.js","SwRegister.js"],"names":["Header","href","state","action","type","transactions","filter","transaction","id","payload","initialTransactionState","GlobalTransactionContext","createContext","GlobalTransactionProvider","children","useReducer","GlobalTransactionReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","amounts","useContext","map","amount","balance","length","reduce","acc","toFixed","IncomeExpense","income","expense","className","Transaction","sign","text","Math","abs","onClick","TransactionList","key","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","App","ReactDOM","render","document","getElementById","navigator","window","addEventListener","swPath","process","serviceWorker","register","then","registration","console","log","scope","err","apply"],"mappings":"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","file":"static/js/main.57b4ec3d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <header>\r\n            <h2>Bootcamp 2020 Ninjas - Expense Tracker App Developed by <a href=\"https://www.linkedin.com/in/muhammad-arslan-ameen\">Arslan Ameen</a></h2>\r\n        </header>\r\n    )\r\n}\r\n","export default (state, action) => {\r\n    switch(action.type) {\r\n      case 'DELETE_TRANSACTION':\r\n        return {\r\n          ...state,\r\n          transactions: state.transactions.filter(transaction => transaction.id !== action.payload)\r\n        }\r\n      case 'ADD_TRANSACTION':\r\n        return {\r\n          ...state,\r\n          transactions: [action.payload, ...state.transactions]\r\n        }\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  ","import React, { createContext, useReducer } from 'react';\r\nimport GlobalTransactionReducer from '../Reducer/GlobalTransactionReducer'\r\n\r\nvar initialTransactionState = {\r\n    transactions: []  //Empty Inistal Array Value\r\n}\r\n\r\n//Create Context\r\nexport const GlobalTransactionContext = createContext(initialTransactionState);\r\n\r\n//Provider Component\r\nexport const GlobalTransactionProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(GlobalTransactionReducer, initialTransactionState);\r\n\r\n    //Action\r\n    function deleteTransaction(id) {\r\n        dispatch({\r\n            type: 'DELETE_TRANSACTION',\r\n            payload: id\r\n        });\r\n    }\r\n    function addTransaction(transaction) {\r\n        dispatch({\r\n          type: 'ADD_TRANSACTION',\r\n          payload: transaction\r\n        });\r\n      }\r\n    return (\r\n        <GlobalTransactionContext.Provider value={{\r\n            transactions: state.transactions,\r\n            deleteTransaction,\r\n            addTransaction\r\n        }}>\r\n            {children}\r\n        </GlobalTransactionContext.Provider>\r\n    );\r\n}","import React, { useContext } from 'react';\r\nimport { GlobalTransactionContext } from '../Context/GlobalState'\r\n\r\nexport const Balance = () => {\r\n    const { transactions } = useContext(GlobalTransactionContext);\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n    const balance = amounts.length > 0 ? amounts.reduce((acc, amount) => acc + amount).toFixed(2) : 0;\r\n\r\n    return (\r\n        <>\r\n            <h4>Your Balance</h4>\r\n            <h1>${balance}</h1>\r\n        </>\r\n    )\r\n}","import React, { useContext } from 'react';\r\nimport { GlobalTransactionContext } from '../Context/GlobalState'\r\n\r\nexport const IncomeExpense = () => {\r\n    const { transactions } = useContext(GlobalTransactionContext);\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n    \r\n    const income = amounts.length > 0 && amounts.filter(amount => amount > 0).length > 0 ? \r\n    amounts.filter(amount => amount > 0).reduce((acc, amount) => acc + amount).toFixed(2) : 0.00;\r\n\r\n    const expense = amounts.length > 0 && amounts.filter(amount => amount < 0).length > 0 ? \r\n    (amounts.filter(amount => amount < 0).reduce((acc, amount) => acc + amount) * -1).toFixed(2) : 0.00;\r\n\r\n    return (\r\n        <div className=\"inc-exp-container\">\r\n            <div>\r\n                <h4>Income</h4>\r\n                <p className=\"money plus\">{income}</p>\r\n            </div>\r\n            <div>\r\n                <h4>Expense</h4>\r\n                <p className=\"money minus\">{expense}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useContext } from 'react';\r\nimport { GlobalTransactionContext } from '../Context/GlobalState'\r\n\r\nexport const Transaction = ({transaction}) => {\r\n    const { deleteTransaction } = useContext(GlobalTransactionContext);\r\n    const sign = transaction.amount < 0 ? '-' : '+';\r\n\r\n    return (\r\n        <li className={sign === '-' ? 'minus' : 'plus'}>\r\n            {transaction.text}<span>{sign}${Math.abs(transaction.amount)}</span>\r\n            <button onClick={() => deleteTransaction(transaction.id)} className=\"delete-btn\">x</button>\r\n        </li>\r\n    )\r\n}","import React, { useContext } from 'react';\r\nimport { GlobalTransactionContext } from '../Context/GlobalState'\r\nimport { Transaction } from './Transaction'\r\n\r\nexport const TransactionList = () => {\r\n    const { transactions } = useContext(GlobalTransactionContext);\r\n    return (\r\n        <div>\r\n            <h3>History</h3>\r\n            <ul className=\"list\">\r\n                {transactions.map(transaction => (<Transaction key={transaction.id} transaction = {transaction} />))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}","import React, { useState, useContext } from 'react';\r\nimport { GlobalTransactionContext } from '../Context/GlobalState'\r\n\r\nexport const AddTransaction = () => {\r\n    const [text, setText] = useState('');\r\n    const [amount, setAmount] = useState(0);\r\n    const { addTransaction } = useContext(GlobalTransactionContext);\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n    //create new object for add new Transaction\r\n        const newTransaction = {\r\n          id: Math.floor(Math.random() * 100000000),\r\n          text,\r\n          amount: +amount\r\n        }\r\n        addTransaction(newTransaction);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3>Add new transaction</h3>\r\n            <form onSubmit={onSubmit}>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"text\">Text</label>\r\n                <input type=\"text\" value={text} onChange = {(e) => setText(e.target.value)} placeholder=\"Enter text...\" />\r\n                </div>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"amount\">Amount <br />\r\n                   (negative - expense, positive - income)\r\n                    </label>\r\n                    <input type=\"number\" value={amount} onChange = {(e) => setAmount(e.target.value)} placeholder=\"Enter amount...\" />\r\n                </div>\r\n                <button className=\"btn\">Add transaction</button>\r\n            </form>\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport { Header } from './Components/Header'\r\nimport { Balance } from './Components/Balance'\r\nimport { IncomeExpense } from './Components/IncomeExpense'\r\nimport { TransactionList } from './Components/TransactionList'\r\nimport { AddTransaction } from './Components/AddTransaction'\r\nimport {GlobalTransactionProvider} from './Context/GlobalState'\r\n\r\nfunction App() {\r\n  return (\r\n    <GlobalTransactionProvider>\r\n      <Header />\r\n      <div className=\"container\">\r\n        <Balance />\r\n        <IncomeExpense />\r\n        <TransactionList />\r\n        <AddTransaction />\r\n      </div>\r\n    </GlobalTransactionProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport SwRegister from './SwRegister';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\nSwRegister.apply();\r\n","export default function SwRegister() {\r\n    // Register a service worker\r\n    if ('serviceWorker' in navigator) {\r\n        window.addEventListener('load', function () {\r\n            let swPath = `${process.env.PUBLIC_URL}/sw.js`  //Get Server Worker File from Public\r\n            navigator.serviceWorker.register(swPath).then(function (registration) {\r\n                // Registration was successful\r\n                console.log('ServiceWorker registration successful with scope: ', registration.scope);\r\n            }, function (err) {\r\n                // registration failed :(\r\n                console.log('ServiceWorker registration failed: ', err);\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n  "],"sourceRoot":""}